# Automated Demo Regeneration Workflow
# Automatically regenerates demo files when tools in src/tools/ change
# Ensures documentation stays in sync with codebase

name: Auto-Regenerate Demos

on:
  push:
    branches: [main]
    paths:
      # Trigger on any TypeScript file changes in src/tools/
      - "src/tools/**/*.ts"
      # Also trigger if the demo script itself changes
      - "demos/demo-tools.js"
  pull_request:
    paths:
      # Trigger on any TypeScript file changes in src/tools/
      - "src/tools/**/*.ts"
      # Also trigger if the demo script itself changes
      - "demos/demo-tools.js"

env:
  NODE_VERSION: "22"

jobs:
  regenerate-demos-pr:
    name: 🔄 Regenerate Demo Files (PR)
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v5
        with:
          # Checkout the PR branch, not the merge commit
          ref: ${{ github.head_ref }}
          # Need full history for proper git operations
          fetch-depth: 0
          # Use the GitHub token for authentication
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v6
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Regenerate demo files
        run: npm run test:demo

      - name: Validate demo coverage
        id: validate_coverage
        run: |
          if npm run validate:demo-coverage; then
            echo "coverage_ok=true" >> $GITHUB_OUTPUT
            echo "✅ All tools have demos"
          else
            echo "coverage_ok=false" >> $GITHUB_OUTPUT
            echo "⚠️ Some tools are missing demos"
          fi
        continue-on-error: true

      - name: Check for demo changes
        id: check_changes
        run: |
          if git diff --quiet demos/; then
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "No demo file changes detected"
          else
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Demo files have been updated"
          fi

      - name: Commit and push demo changes
        if: steps.check_changes.outputs.changed == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add demos/*.md
          git commit -m "chore: auto-regenerate demos after tool changes

          Generated by GitHub Actions workflow
          Triggered by changes in src/tools/

          [skip ci]"
          git push
        env:
          # Note: Commits from GITHUB_TOKEN won't trigger other workflows
          # This is intentional to prevent infinite loops
          # The demos/ directory is not linted, so this is safe
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Add PR comment
        if: steps.check_changes.outputs.changed == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            let body = '🔄 **Demo files automatically regenerated**\n\nThe demo files in `demos/` have been updated to reflect changes in `src/tools/`. Please review the changes to ensure they are correct.';

            if ('${{ steps.validate_coverage.outputs.coverage_ok }}' === 'false') {
              body += '\n\n⚠️ **Warning**: Some tools are missing demos. Run `npm run validate:demo-coverage` locally to see which tools need demos.';
            }

            body += '\n\n> 💡 **Note**: The Lefthook quality check will automatically skip for this automated commit. This is expected - demos are auto-generated and the workflow is configured to skip quality gates for `[skip ci]` commits from `github-actions[bot]`.';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })

      - name: Generate workflow summary
        if: always()
        run: |
          echo "## 🔄 Demo Regeneration Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.check_changes.outputs.changed }}" == "true" ]; then
            echo "### ✅ Demos Updated" >> $GITHUB_STEP_SUMMARY
            echo "Demo files were regenerated and committed to the PR." >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Changed files:**" >> $GITHUB_STEP_SUMMARY
            git diff --name-only HEAD~1 demos/ | sed 's/^/- /' >> $GITHUB_STEP_SUMMARY || echo "- (unable to list changed files)" >> $GITHUB_STEP_SUMMARY
          else
            echo "### ℹ️ No Changes" >> $GITHUB_STEP_SUMMARY
            echo "Demo files are already up to date - no regeneration needed." >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY

          # Add coverage validation results
          if [ "${{ steps.validate_coverage.outputs.coverage_ok }}" == "false" ]; then
            echo "### ⚠️ Demo Coverage Warning" >> $GITHUB_STEP_SUMMARY
            echo "Some tools are missing demos. Run \`npm run validate:demo-coverage\` locally to identify which tools need demos." >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          fi

          echo "**Trigger:** Changes detected in \`src/tools/\`" >> $GITHUB_STEP_SUMMARY
          echo "**Script:** \`npm run test:demo\`" >> $GITHUB_STEP_SUMMARY
          echo "**Validation:** \`npm run validate:demo-coverage\`" >> $GITHUB_STEP_SUMMARY

  regenerate-demos-main:
    name: 🔄 Regenerate Demo Files (Main)
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v5
        with:
          ref: main
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v6
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Regenerate demo files
        run: npm run test:demo

      - name: Validate demo coverage
        id: validate_coverage
        run: |
          if npm run validate:demo-coverage; then
            echo "coverage_ok=true" >> $GITHUB_OUTPUT
            echo "✅ All tools have demos"
          else
            echo "coverage_ok=false" >> $GITHUB_OUTPUT
            echo "⚠️ Some tools are missing demos"
          fi
        continue-on-error: true

      - name: Check for demo changes
        id: check_changes
        run: |
          if git diff --quiet demos/; then
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "No demo file changes detected"
          else
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Demo files have been updated"
          fi

      - name: Commit and push demo changes
        if: steps.check_changes.outputs.changed == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add demos/*.md
          git commit -m "chore: auto-regenerate demos after tool changes

          Generated by GitHub Actions workflow
          Triggered by push to main branch

          [skip ci]"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate workflow summary
        if: always()
        run: |
          echo "## 🔄 Demo Regeneration Report (Main Branch)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.check_changes.outputs.changed }}" == "true" ]; then
            echo "### ✅ Demos Updated" >> $GITHUB_STEP_SUMMARY
            echo "Demo files were regenerated and committed to main branch." >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Changed files:**" >> $GITHUB_STEP_SUMMARY
            git diff --name-only HEAD~1 demos/ | sed 's/^/- /' >> $GITHUB_STEP_SUMMARY || echo "- (unable to list changed files)" >> $GITHUB_STEP_SUMMARY
          else
            echo "### ℹ️ No Changes" >> $GITHUB_STEP_SUMMARY
            echo "Demo files are already up to date - no regeneration needed." >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY

          # Add coverage validation results
          if [ "${{ steps.validate_coverage.outputs.coverage_ok }}" == "false" ]; then
            echo "### ⚠️ Demo Coverage Warning" >> $GITHUB_STEP_SUMMARY
            echo "Some tools are missing demos. Run \`npm run validate:demo-coverage\` locally to identify which tools need demos." >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          fi

          echo "**Trigger:** Push to main branch with changes in \`src/tools/\`" >> $GITHUB_STEP_SUMMARY
          echo "**Script:** \`npm run test:demo\`" >> $GITHUB_STEP_SUMMARY
          echo "**Validation:** \`npm run validate:demo-coverage\`" >> $GITHUB_STEP_SUMMARY
